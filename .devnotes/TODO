# IF ANYTHING IS NOT WORKING AS EXPECTED

- subscribers, publishers ve timers
- check default values of parameters
- Compare launch structure and synchronization with the native ROS2 nodes
- Check clock:now and toRosTime functions, they start from 0 not from epoch, as they can return some arbitrary values somehow.
- We can tune the lifespan of dds messages on "actuation_module/include/common/dds/dds.hpp" -> <https://cyclonedds.io/docs/cyclonedds/latest/api/qos.html#c.dds_qset_lifespan>
- Try with SMP enabled
- OSQP vs unconstraint_qp
- Validate side by side all nodes with Autoware original code

## Key points of porting

1. We dont have boost, rclcpp, osqp, tf2 or any other dependencies installed, except for eigen3, cyclonedds, and actuation_msgs.
2. We need to use C equivalent messages of CPP messages.
3. We dont have direct bindings for cycloneddscpp, so we need to manually interface sequences by converting them into vector.
4. We dont have Node utils like declare_parameter(), create_timer(), create_subscription(), create_publisher(), get_logger(), clock, etc. For this we have custom Node class that implements the utils.
5. We dont have any kind of logging system, so we need to manually print messages to the console, by using printf() to keep it portable.
