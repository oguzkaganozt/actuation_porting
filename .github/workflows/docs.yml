name: Build and Deploy Documentation

on:
  push:
    branches: [ "main", "master" ]
    paths:
      - 'documentation/**'
      - '.github/workflows/docs.yml'
  pull_request:
    branches: [ "main", "master" ]
    paths:
      - 'documentation/**'
  # Allow manual triggering
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Build job
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
          cache: 'pip'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r documentation/requirements.txt

      - name: Build documentation
        run: |
          cd documentation
          sphinx-build -b html . _build/html
        env:
          # Treat warnings as errors for clean builds
          SPHINXOPTS: "-W --keep-going"

      - name: Setup Pages
        if: github.event_name != 'pull_request'
        uses: actions/configure-pages@v4

      - name: Upload artifact
        if: github.event_name != 'pull_request'
        uses: actions/upload-pages-artifact@v3
        with:
          path: './documentation/_build/html'

  # Deployment job (only runs on push to main/master, not on PRs)
  deploy:
    if: github.event_name != 'pull_request'
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4 