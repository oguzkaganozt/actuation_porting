- Node class
-- how to implement diagnostic updater that is already existing in ros2 ?
-- implement dds mechanism just like ROS2

- Sequence class
-- find a way to access buffers with a sequenced class including eg. trajectory.points 
-- Remove the duality, use zephyr alloc for dds allocations and get rid of k_mallocs inside sequence instead just use dds_alloc
-- which means we all use zephyr alloc for dds allocations but on the code we will use dds_alloc and dds_free, this we will get
-- best of both worlds, we can use zephyr alloc for dds allocations and leave memory management to cyclonedds

- Porting ros utils
-- universal wall timer with zephyr kernel timers vs chrono timers ? Ambroise was using chrono timers

- DDS
-- do we need message converter ? try building .idl messages with rosidl instead of cyclonedds idlc

NOTES
- try-catch should be used in critical functions, because it is hard to port the code without it